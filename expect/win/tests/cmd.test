# Commands covered:  Subprocess' offspring handling
#
# This file contains a collection of tests for one or more of the Expect
# command capabilities.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1997 Mitel, Inc.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: $Header: /disk/3/CVSROOT/Mitel/expect/win/tests/cmd.test,v 1.1 1997/09/05 05:30:39 chaffee Exp $

if {[string compare test [info procs test]] == 1} then {source defs}

catch {unset a}
catch {unset x}

test cmd-1.1 {tests of spawned processes' offspring} {
    if [catch {
	set timeout 10
	spawn cmd.exe
	expect {
	    "tests>" {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
    } msg] {} else {set msg 1}
    catch {close}
    catch {wait}
    set msg
} {1}

test cmd-1.2 {tests of multiple descendents} {
    if [catch {
	set timeout 10
	spawn cmd.exe
	expect {
	    "tests>" {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
	send "net\r"
	expect {
	    "VIEW " {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
	send "net\r"
	expect {
	    "VIEW " {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
    } msg] {} else {set msg 1}
    catch {close}
    catch {wait}
    set msg
} {1}

test cmd-1.3 {tests of multiple descendents} {
    if [catch {
	set timeout 10
	spawn cmd.exe
	expect {
	    "tests>" {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
	send "cmd\r"
	expect {
	    "tests>" {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
	send "cmd\r"
	expect {
	    "tests>" {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
	send "exit\r"
	expect {
	    "tests>" {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
	send "exit\r"
	expect {
	    "tests>" {}
	    eof {error "unexpected eof"}
	    timeout {error "unexpected timeout"}
	}
	send "exit\r"
	expect {
	    eof {}
	    "tests>" {error "unexpected prompt"}
	    timeout {error "unexpected timeout"}
	}
    } msg] {} else {set msg 1}
    catch {close}
    catch {wait}
    set msg
} {1}
